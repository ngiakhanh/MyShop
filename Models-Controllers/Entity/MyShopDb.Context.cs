//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models_Controllers.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyShopDbEntities : DbContext
    {
        public MyShopDbEntities()
            : base("name=MyShopDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Advertise> Advertises { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<GroupProduct> GroupProducts { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int SP_Advertise_Create(Nullable<int> company, string name, string url, Nullable<int> width, Nullable<int> height, string link, Nullable<int> target, Nullable<int> position, Nullable<int> order, Nullable<int> status, Nullable<bool> isDel)
        {
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target.HasValue ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Advertise_Create", companyParameter, nameParameter, urlParameter, widthParameter, heightParameter, linkParameter, targetParameter, positionParameter, orderParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_Advertise_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Advertise_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Advertise_getElements_Result> SP_Advertise_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Advertise_getElements_Result>("SP_Advertise_getElements");
        }
    
        public virtual ObjectResult<SP_Advertise_getElementsbyId_Result> SP_Advertise_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Advertise_getElementsbyId_Result>("SP_Advertise_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Advertise_Update(Nullable<int> id, Nullable<int> company, string name, string url, Nullable<int> width, Nullable<int> height, string link, Nullable<int> target, Nullable<int> position, Nullable<int> order, Nullable<int> status, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target.HasValue ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Advertise_Update", idParameter, companyParameter, nameParameter, urlParameter, widthParameter, heightParameter, linkParameter, targetParameter, positionParameter, orderParameter, statusParameter, isDelParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Company_Create(string name, string address, string phoneNumber, string fax, string email, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Company_Create", nameParameter, addressParameter, phoneNumberParameter, faxParameter, emailParameter, isDelParameter);
        }
    
        public virtual int SP_Company_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Company_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Company_getElements_Result> SP_Company_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Company_getElements_Result>("SP_Company_getElements");
        }
    
        public virtual ObjectResult<SP_Company_getElementsbyId_Result> SP_Company_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Company_getElementsbyId_Result>("SP_Company_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Company_Update(Nullable<int> id, string name, string address, string phoneNumber, string fax, string email, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Company_Update", idParameter, nameParameter, addressParameter, phoneNumberParameter, faxParameter, emailParameter, isDelParameter);
        }
    
        public virtual int SP_Contact_Create(Nullable<int> customer, string summary, string detail, Nullable<System.DateTime> date, Nullable<bool> isDel)
        {
            var customerParameter = customer.HasValue ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(int));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contact_Create", customerParameter, summaryParameter, detailParameter, dateParameter, isDelParameter);
        }
    
        public virtual int SP_Contact_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contact_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Contact_getElements_Result> SP_Contact_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contact_getElements_Result>("SP_Contact_getElements");
        }
    
        public virtual ObjectResult<SP_Contact_getElementsbyId_Result> SP_Contact_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contact_getElementsbyId_Result>("SP_Contact_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Contact_Update(Nullable<int> id, Nullable<int> customer, string summary, string detail, Nullable<System.DateTime> date, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var customerParameter = customer.HasValue ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(int));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Contact_Update", idParameter, customerParameter, summaryParameter, detailParameter, dateParameter, isDelParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Customers_Create(string name, Nullable<System.DateTime> birthDay, string province, string address, string tel, string email, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("BirthDay", birthDay) :
                new ObjectParameter("BirthDay", typeof(System.DateTime));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Customers_Create", nameParameter, birthDayParameter, provinceParameter, addressParameter, telParameter, emailParameter, isDelParameter);
        }
    
        public virtual int SP_Customers_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Customers_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Customers_getElements_Result> SP_Customers_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customers_getElements_Result>("SP_Customers_getElements");
        }
    
        public virtual ObjectResult<SP_Customers_getElementsbyId_Result> SP_Customers_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customers_getElementsbyId_Result>("SP_Customers_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Customers_Update(Nullable<int> id, string name, Nullable<System.DateTime> birthDay, string province, string address, string tel, string email, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("BirthDay", birthDay) :
                new ObjectParameter("BirthDay", typeof(System.DateTime));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Customers_Update", idParameter, nameParameter, birthDayParameter, provinceParameter, addressParameter, telParameter, emailParameter, isDelParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Employees_Create(Nullable<int> user, string name, string email, string address, string tel, Nullable<int> type, string nick, Nullable<int> status, Nullable<bool> isDel)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employees_Create", userParameter, nameParameter, emailParameter, addressParameter, telParameter, typeParameter, nickParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_Employees_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employees_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Employees_getElements_Result> SP_Employees_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employees_getElements_Result>("SP_Employees_getElements");
        }
    
        public virtual ObjectResult<SP_Employees_getElementsbyId_Result> SP_Employees_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Employees_getElementsbyId_Result>("SP_Employees_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Employees_Update(Nullable<int> id, Nullable<int> user, string name, string email, string address, string tel, Nullable<int> type, string nick, Nullable<int> status, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employees_Update", idParameter, userParameter, nameParameter, emailParameter, addressParameter, telParameter, typeParameter, nickParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_GroupProduct_Create(string name, string content, string images, Nullable<int> order, Nullable<int> status, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var imagesParameter = images != null ?
                new ObjectParameter("Images", images) :
                new ObjectParameter("Images", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GroupProduct_Create", nameParameter, contentParameter, imagesParameter, orderParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_GroupProduct_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GroupProduct_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_GroupProduct_getElements_Result> SP_GroupProduct_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GroupProduct_getElements_Result>("SP_GroupProduct_getElements");
        }
    
        public virtual ObjectResult<SP_GroupProduct_getElementsbyId_Result> SP_GroupProduct_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GroupProduct_getElementsbyId_Result>("SP_GroupProduct_getElementsbyId", idParameter);
        }
    
        public virtual int SP_GroupProduct_Update(Nullable<int> id, string name, string content, string images, Nullable<int> order, Nullable<int> status, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var imagesParameter = images != null ?
                new ObjectParameter("Images", images) :
                new ObjectParameter("Images", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GroupProduct_Update", idParameter, nameParameter, contentParameter, imagesParameter, orderParameter, statusParameter, isDelParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Menu_Create(string name, string link, Nullable<int> order, Nullable<int> parentId, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Menu_Create", nameParameter, linkParameter, orderParameter, parentIdParameter, isDelParameter);
        }
    
        public virtual int SP_Menu_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Menu_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Menu_getElements_Result> SP_Menu_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_getElements_Result>("SP_Menu_getElements");
        }
    
        public virtual ObjectResult<SP_Menu_getElementsbyId_Result> SP_Menu_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Menu_getElementsbyId_Result>("SP_Menu_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Menu_Update(Nullable<int> id, string name, string link, Nullable<int> order, Nullable<int> parentId, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Menu_Update", idParameter, nameParameter, linkParameter, orderParameter, parentIdParameter, isDelParameter);
        }
    
        public virtual int SP_Order_Create(Nullable<int> customer_Id, Nullable<double> totalMoney, Nullable<System.DateTime> date, Nullable<int> status, Nullable<bool> isDel)
        {
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var totalMoneyParameter = totalMoney.HasValue ?
                new ObjectParameter("TotalMoney", totalMoney) :
                new ObjectParameter("TotalMoney", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Order_Create", customer_IdParameter, totalMoneyParameter, dateParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_Order_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Order_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Order_getElements_Result> SP_Order_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Order_getElements_Result>("SP_Order_getElements");
        }
    
        public virtual ObjectResult<SP_Order_getElementsbyId_Result> SP_Order_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Order_getElementsbyId_Result>("SP_Order_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Order_Update(Nullable<int> id, Nullable<int> customer_Id, Nullable<double> totalMoney, Nullable<System.DateTime> date, Nullable<int> status, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var totalMoneyParameter = totalMoney.HasValue ?
                new ObjectParameter("TotalMoney", totalMoney) :
                new ObjectParameter("TotalMoney", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Order_Update", idParameter, customer_IdParameter, totalMoneyParameter, dateParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_OrderDetail_Create(Nullable<int> order_Id, Nullable<int> product_Id, Nullable<int> quantity, Nullable<bool> isDel)
        {
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OrderDetail_Create", order_IdParameter, product_IdParameter, quantityParameter, isDelParameter);
        }
    
        public virtual int SP_OrderDetail_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OrderDetail_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_OrderDetail_getElements_Result> SP_OrderDetail_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrderDetail_getElements_Result>("SP_OrderDetail_getElements");
        }
    
        public virtual ObjectResult<SP_OrderDetail_getElementsbyId_Result> SP_OrderDetail_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrderDetail_getElementsbyId_Result>("SP_OrderDetail_getElementsbyId", idParameter);
        }
    
        public virtual int SP_OrderDetail_Update(Nullable<int> id, Nullable<int> order_Id, Nullable<int> product_Id, Nullable<int> quantity, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OrderDetail_Update", idParameter, order_IdParameter, product_IdParameter, quantityParameter, isDelParameter);
        }
    
        public virtual int SP_Product_Create(string name, string detail, Nullable<double> price, string image, Nullable<double> priceNew, Nullable<System.DateTime> date, Nullable<int> order, Nullable<int> status, Nullable<int> groupProduct_Id, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceNewParameter = priceNew.HasValue ?
                new ObjectParameter("PriceNew", priceNew) :
                new ObjectParameter("PriceNew", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var groupProduct_IdParameter = groupProduct_Id.HasValue ?
                new ObjectParameter("GroupProduct_Id", groupProduct_Id) :
                new ObjectParameter("GroupProduct_Id", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Product_Create", nameParameter, detailParameter, priceParameter, imageParameter, priceNewParameter, dateParameter, orderParameter, statusParameter, groupProduct_IdParameter, isDelParameter);
        }
    
        public virtual int SP_Product_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Product_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Product_getElements_Result> SP_Product_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Product_getElements_Result>("SP_Product_getElements");
        }
    
        public virtual ObjectResult<SP_Product_getElementsbyId_Result> SP_Product_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Product_getElementsbyId_Result>("SP_Product_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Product_Update(Nullable<int> id, string name, string detail, Nullable<double> price, string image, Nullable<double> priceNew, Nullable<System.DateTime> date, Nullable<int> order, Nullable<int> status, Nullable<int> groupProduct_Id, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceNewParameter = priceNew.HasValue ?
                new ObjectParameter("PriceNew", priceNew) :
                new ObjectParameter("PriceNew", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var groupProduct_IdParameter = groupProduct_Id.HasValue ?
                new ObjectParameter("GroupProduct_Id", groupProduct_Id) :
                new ObjectParameter("GroupProduct_Id", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Product_Update", idParameter, nameParameter, detailParameter, priceParameter, imageParameter, priceNewParameter, dateParameter, orderParameter, statusParameter, groupProduct_IdParameter, isDelParameter);
        }
    
        public virtual int SP_Province_Create(string name, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Province_Create", nameParameter, isDelParameter);
        }
    
        public virtual int SP_Province_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Province_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Province_getElements_Result> SP_Province_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Province_getElements_Result>("SP_Province_getElements");
        }
    
        public virtual ObjectResult<SP_Province_getElementsbyId_Result> SP_Province_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Province_getElementsbyId_Result>("SP_Province_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Province_Update(Nullable<int> id, string name, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Province_Update", idParameter, nameParameter, isDelParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_Shop_Create(string name, string address, string tel, Nullable<int> province_Id, Nullable<bool> isDel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var province_IdParameter = province_Id.HasValue ?
                new ObjectParameter("Province_Id", province_Id) :
                new ObjectParameter("Province_Id", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Shop_Create", nameParameter, addressParameter, telParameter, province_IdParameter, isDelParameter);
        }
    
        public virtual int SP_Shop_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Shop_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Shop_getElements_Result> SP_Shop_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shop_getElements_Result>("SP_Shop_getElements");
        }
    
        public virtual ObjectResult<SP_Shop_getElementsbyId_Result> SP_Shop_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Shop_getElementsbyId_Result>("SP_Shop_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Shop_Update(Nullable<int> id, string name, string address, string tel, Nullable<int> province_Id, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var province_IdParameter = province_Id.HasValue ?
                new ObjectParameter("Province_Id", province_Id) :
                new ObjectParameter("Province_Id", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Shop_Update", idParameter, nameParameter, addressParameter, telParameter, province_IdParameter, isDelParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_Users_Create(string userName, string password, Nullable<int> rule, Nullable<int> status, Nullable<bool> isDel)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var ruleParameter = rule.HasValue ?
                new ObjectParameter("Rule", rule) :
                new ObjectParameter("Rule", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_Create", userNameParameter, passwordParameter, ruleParameter, statusParameter, isDelParameter);
        }
    
        public virtual int SP_Users_deleteTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_deleteTemp", idParameter);
        }
    
        public virtual ObjectResult<SP_Users_getElements_Result> SP_Users_getElements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_getElements_Result>("SP_Users_getElements");
        }
    
        public virtual ObjectResult<SP_Users_getElementsbyId_Result> SP_Users_getElementsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Users_getElementsbyId_Result>("SP_Users_getElementsbyId", idParameter);
        }
    
        public virtual int SP_Users_Update(Nullable<int> id, string userName, string password, Nullable<int> rule, Nullable<int> status, Nullable<bool> isDel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var ruleParameter = rule.HasValue ?
                new ObjectParameter("Rule", rule) :
                new ObjectParameter("Rule", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isDelParameter = isDel.HasValue ?
                new ObjectParameter("isDel", isDel) :
                new ObjectParameter("isDel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_Update", idParameter, userNameParameter, passwordParameter, ruleParameter, statusParameter, isDelParameter);
        }
    }
}
